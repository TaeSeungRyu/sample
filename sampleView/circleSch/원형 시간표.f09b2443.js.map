{"version":3,"sources":["index.ts"],"names":[],"mappings":"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","file":"원형 시간표.f09b2443.js","sourceRoot":"..","sourcesContent":["\r\n\r\nclass CircleSchedule{\r\n\r\n    _id : string\r\n    option : any\r\n    data : any\r\n    hour12 : any = [] \r\n\r\n    canvas : any\r\n    ctx : any\r\n    radius : any\r\n    width : any;\r\n    height : any;\r\n\r\n    map = new Map()\r\n\r\n    clickedIndex : any;\r\n    clickedColor : any;\r\n\r\n    eventer:any;\r\n    event_ctx:any;\r\n    \r\n    childrenName : Array<any> = ['sch_background', 'sch_eventer', 'printer_canvas']\r\n    resizeOnOff : boolean = true\r\n\r\n    constructor(_id, data, option){\r\n        if (! option) { this.option = {} }\r\n        else { this.option = option }\r\n        if (this.option.beforWorking) { this.option.beforWorking(); }\r\n        if (! this.option.lineColor) { this.option.lineColor = '#dfdfdf' }\r\n        if (! this.option.lineWidth) { this.option.lineWidth = 0.3 }\r\n        if (! this.option.circleColor) { this.option.circleColor = '#dfdfdf' }\r\n        if (! this.option.circleWidth) { this.option.circleWidth = 3 }\r\n        if (! this.option.timeColor) { this.option.timeColor = 'black' }\r\n        if (! this.option.timeFontStyle) { this.option.timeFontStyle = '10px sans-serif' }\r\n        if (! this.option.timeTextPadding) { this.option.timeTextPadding = 0 }\r\n        if (! this.option.innerFontColor) { this.option.innerFontColor = 'white' }\r\n        if (! this.option.innerFontStyle) { this.option.innerFontStyle = '10px sans-serif' }\r\n        if (! this.option.innerTextPadding) { this.option.innerTextPadding = 0 }\r\n        if (! this.option.sectorWidth) { this.option.sectorWidth = 2 } else if ( this.option.sectorWidth > 5) { this.option.sectorWidth = 3; console.log('부채꼴 테두리는 35이상을 줄 수 없습니다.'); }\r\n        if (! this.option.sectorColor) { this.option.sectorColor = 'white' }\r\n        if (! this.option.middleFontSize) { this.option.middleFontSize = 14 }\r\n        if (! this.option.middleFontPadding) { this.option.middleFontPadding = 5 }\r\n        if (! this.option.middleFontColor) { this.option.middleFontColor = '#767676' }\r\n        if (! this.option.middleCicleRate) { this.option.middleCicleRate = 0.18 }\r\n\r\n        this._id = _id\r\n        this.data = [\r\n            {index:'A', name:'A스케줄', color : 'rgba(211,14,12,0.7)', time : '02'},\r\n            {index:'A', name:'A스케줄', color : 'rgba(211,14,12,0.7)', time : '03'},\r\n            {index:'A', name:'A스케줄', color : 'rgba(211,14,12,0.7)', time : '04'}, \r\n            {index:'A', name:'A스케줄', color : 'rgba(211,14,12,0.7)', time : '05'},\r\n            {index:'A', name:'A스케줄', color : 'rgba(211,14,12,0.7)', time : '08'},\r\n            {index:'B', name:'B스케줄', color : 'rgba(45,127,156,0.8)', time : '06'},\r\n            {index:'B', name:'B스케줄', color : 'rgba(45,127,156,0.8)', time : '07'},\r\n            {index:'C', name:'C스케줄', color : 'rgba(95,181,73,0.8)', time : '10'},\r\n            {index:'C', name:'C스케줄', color : 'rgba(95,181,73,0.8)', time : '11'},\r\n            {index:'C', name:'C스케줄', color : 'rgba(95,181,73,0.8)', time : '15'},\r\n            {index:'C', name:'C스케줄', color : 'rgba(95,181,73,0.8)', time : '16'},\r\n            {index:'C', name:'C스케줄', color : 'rgba(95,181,73,0.8)', time : '17'},\r\n            {index:'C', name:'C스케줄', color : 'rgba(95,181,73,0.8)', time : '18'},\r\n        \r\n            {index:'D', name:'D스케줄', color : 'rgba(212,156,213,0.8)', time : '20'},\r\n            {index:'D', name:'D스케줄', color : 'rgba(212,156,213,0.8)', time : '21'},\r\n            {index:'D', name:'D스케줄', color : 'rgba(212,156,213,0.8)', time : '22'},\r\n            {index:'D', name:'D스케줄', color : 'rgba(212,156,213,0.8)', time : '23'},\r\n            {index:'D', name:'D스케줄', color : 'rgba(212,156,213,0.8)', time : '24'},\r\n        \r\n            {index:'E', name:'E스케줄', color : 'rgba(177,46,201,0.8)', time : ''},\r\n        ]\r\n        \r\n        if(this._init_()){\r\n            this.build_fun()\r\n            this.build_fun2()\r\n            this.build_fun3()\r\n\r\n            window.onresize = (event) => {\r\n                console.log(this.resizeOnOff)\r\n                if (this.resizeOnOff) {\r\n                    let mother = document.getElementById(_id)\r\n                    this.width = mother.clientWidth * 0.8\r\n                    this.height = mother.clientHeight * 0.8\r\n                    \r\n                    for (let i in this.childrenName) {\r\n                        let cvs : any = document.getElementById(this.childrenName[i])\r\n                        cvs.width = this.width;\r\n                        cvs.height = this.height;\r\n                    }\r\n                    this.radius = this.width * 0.3\r\n                    this.makeHourLine()\r\n                    this.drawCircleForArray()\r\n                }\r\n            };                \r\n        }\r\n       \r\n    }\r\n\r\n    _init_() : boolean{\r\n        //#0\r\n        let mother = document.getElementById(this._id)\r\n        this.width = mother.clientWidth * 0.8\r\n        this.height = mother.clientHeight * 0.8\r\n        mother.style.position = 'relative';\r\n        mother.style.display = 'inline-block';\r\n\r\n        //#1\r\n        for (let i in this.childrenName) {\r\n            let cvs = document.createElement('canvas')\r\n            cvs.id = this.childrenName[i];\r\n            cvs.className = 'circle_canvas';\r\n            cvs.width = this.width;\r\n            cvs.height = this.height;\r\n            mother.appendChild(cvs);\r\n        }\r\n        //#2\r\n        let cvs = document.createElement('div')\r\n        cvs.className = 'sch_item_box';\r\n        mother.appendChild(cvs);\r\n        const sch_box = document.getElementsByClassName('sch_item_box');\r\n        this.map = new Map()\r\n        if (this.data && this.data.length > 0) {\r\n            this.data.forEach(  (_dt)=>{\r\n                this.map.set(_dt.index, {\r\n                    name: _dt.name,\r\n                    color: _dt.color\r\n                });\r\n            });\r\n            this.map.forEach((value, key)=>{\r\n                let div = document.createElement('div')\r\n                div.className = 'sch_item';\r\n                div.style.color = value.color;\r\n                div.innerText = value.name;\r\n                div.setAttribute('clickedIndex', key)\r\n                sch_box[0].append(div);\r\n            });\r\n        }\r\n        this.map.set('', '')        \r\n        if (this.option && this.option.showPrinter) {\r\n            let btn = document.createElement('button')\r\n            btn.innerText = '디버깅 출력'\r\n            btn.addEventListener('click', (event)=>{\r\n                this.printer()\r\n            })\r\n            sch_box[0].append(btn);\r\n        }   \r\n        \r\n        const list = document.querySelectorAll('.sch_item');\r\n\r\n        function addClass(element, className) { element.className += \" \" + className; };\r\n        function removeClass(element, className) { var check = new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\"); element.className = element.className.replace(check, \" \").trim(); };\r\n        \r\n        for (let index = 0; index < list.length; index++) {\r\n            let element : any = list[index]\r\n            element.addEventListener('click', (event) =>{\r\n                for (let index = 0; index < list.length; index++) {\r\n                    removeClass(list[index],'imClicked')\r\n                }   \r\n                addClass(list[index],'imClicked')      \r\n                this.clickedIndex = element.getAttribute('clickedIndex')\r\n                this.clickedColor = element.style.color\r\n            })\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n\r\n\r\n    build_fun () : void{\r\n        this.canvas = document.getElementById('sch_background')\r\n        this.ctx = this.canvas.getContext('2d')\r\n        this.radius = this.width * 0.3\r\n        \r\n        for (let i = 0; i < 24; i++) {\r\n            let display : any = 7 + i;\r\n            if (display > 24)  display = display - 24;\r\n            \r\n            if (display < 10)  display = '0' + display;\r\n            \r\n            let info = {\r\n                idx: '', dataFill: false, color: '', name: ''\r\n            };\r\n            for (let j in this.data) { \r\n                if (this.data[j].time == display) {\r\n                    info.idx = this.data[j].index;\r\n                    info.name = this.data[j].name;\r\n                    info.dataFill = true;\r\n                    info.color = this.data[j].color;\r\n                }\r\n            }\r\n            this.hour12.push({\r\n                start: (i) * 15,\r\n                end: (i + 1) * 15,\r\n                display: display + \"\",\r\n                index: info.idx,\r\n                name: info.name,\r\n                dataFilled: info.dataFill,\r\n                filledColor: info.color\r\n            })\r\n        }\r\n        \r\n        this.makeHourLine();\r\n    }\r\n\r\n    build_fun2 () : void{\r\n        var isUp = false\r\n        var doubleClickedCnt = 0\r\n        this.eventer = document.getElementById('sch_eventer')\r\n        this.event_ctx = this.eventer.getContext('2d')\r\n    \r\n        setInterval( ()=>{\r\n            if (! isUp) {\r\n                this.drawCircleForArray()\r\n            }\r\n        }, 1500)\r\n    \r\n        this.eventer.addEventListener('mousemove', (event) =>{\r\n            var x1 = event.clientX - this.eventer.parentElement.offsetLeft\r\n            var y1 = event.clientY - this.eventer.parentElement.offsetTop\r\n            var inn = this.isInsideArc(x1, y1)\r\n            if (isUp && inn && inn.result && ! inn.status.dataFilled && this.clickedIndex) {\r\n                this.hour12[inn.index].dataFilled = true\r\n                this.hour12[inn.index].filledColor = this.clickedColor\r\n                this.hour12[inn.index].index = this.clickedIndex\r\n                this.hour12[inn.index].name = inn.status.name\r\n                this.drawCircleForArray()\r\n            }\r\n        })\r\n    \r\n        this.eventer.addEventListener('mousedown', (event)=>{\r\n            isUp = true\r\n            setTimeout(function () {\r\n                doubleClickedCnt++\r\n            }, 100)\r\n        })\r\n    \r\n        this.eventer.addEventListener('mouseup', (event)=>{\r\n            isUp = false\r\n            //\r\n            setTimeout( ()=> {\r\n                if (doubleClickedCnt > 1) {\r\n                    var x1 = event.clientX - this.eventer.parentElement.offsetLeft\r\n                    var y1 = event.clientY - this.eventer.parentElement.offsetTop\r\n                    var index = this.isInsideArc(x1, y1).index\r\n                    this.hour12[index].dataFilled = false\r\n                    this.hour12[index].index = ''\r\n                    this.hour12[index].name = ''\r\n                    this.drawCircleForArray()\r\n                }\r\n                doubleClickedCnt = 0\r\n            }, 250)\r\n        })\r\n    \r\n    }\r\n\r\n    build_fun3() : void{\r\n\r\n        if (this.data && this.data.length > 0) {\r\n            this.drawCircleForArray()\r\n        }\r\n        if (this.option.afterWorking) {\r\n            this.option.afterWorking({\r\n                timeData: this.hour12,\r\n                group: new Array(... this.map)\r\n            });\r\n        }\r\n    }\r\n\r\n    commonImgFun(arg, fileName) {\r\n        const sss3 : any = document.getElementById('printer_canvas')\r\n        const sss_ctx = sss3.getContext('2d')\r\n        let src1 = this.canvas.toDataURL(\"image/png\")\r\n        let src2 = this.eventer.toDataURL(\"image/png\")\r\n        sss_ctx.clearRect(0, 0, this.width, this.height)\r\n        let base_image = new Image();\r\n        base_image.src = src1;\r\n        base_image.onload = ()=>{\r\n            sss_ctx.drawImage(base_image, 0, 0)\r\n            let base_image2 = new Image();\r\n            base_image2.src = src2;\r\n            base_image2.onload =  ()=>{\r\n                sss_ctx.drawImage(base_image2, 0, 0)\r\n                let imageData = sss3.toDataURL(\"image/png\")\r\n                if (fileName) {\r\n                    var link = document.createElement('a');\r\n                    link.download = fileName;\r\n                    link.href = imageData\r\n                    link.click();\r\n                } else {\r\n                    arg(imageData)\r\n                } \r\n                this.drawCircleForArray();\r\n                sss_ctx.clearRect(0, 0, this.width, this.height);\r\n            }\r\n        }\r\n    }  \r\n\r\n    sortObject(obj) {\r\n        return Object.keys(obj).sort().reverse().reduce(function (result, key) {\r\n            result[key] = obj[key];\r\n            return result;\r\n        }, {});\r\n    }\r\n    makeHourLine() {\r\n        // #4. \r\n        this.ctx.clearRect(0, 0, this.width, this.height)\r\n        this.drawCircle(this.ctx, 0, 360, true)\r\n        \r\n        // #5. \r\n        this.hour12.forEach((data)=>{\r\n            this.ctx.save()\r\n            this.ctx.beginPath()\r\n            if (this.option.lineShow) {\r\n                this.ctx.lineJoin = 'round'\r\n                this.ctx.strokeStyle = this.option.lineColor\r\n                this.ctx.lineWidth = this.option.lineWidth\r\n                this.ctx.moveTo(this.width / 2, this.height / 2)\r\n                let xx = Math.cos(this.degreesToRadians(data.end)) * this.radius + this.width / 2\r\n                let yy = Math.sin(this.degreesToRadians(data.end)) * this.radius + this.height / 2\r\n                this.ctx.lineTo(xx, yy)\r\n                this.ctx.stroke()\r\n            }\r\n            // \r\n            let xx = Math.cos(this.degreesToRadians(data.end)) * this.radius * 1.2 + this.width / 2\r\n            let yy = Math.sin(this.degreesToRadians(data.end)) * this.radius * 1.2 + this.height / 2\r\n            var minus = this.ctx.measureText(data.display).width / 2;\r\n            this.ctx.fillStyle = this.option.timeColor;\r\n            this.ctx.font = this.option.timeFontStyle\r\n            this.ctx.fillText(data.display, xx - minus - this.option.timeTextPadding, yy)\r\n            this.ctx.closePath()\r\n            this.ctx.restore()\r\n        })\r\n    }\r\n\r\n\r\n    isInsideArc(x1, y1) {\r\n        var result = false;\r\n        var x = this.width / 2 - x1;\r\n        var y = this.height / 2 - y1;\r\n        var my_len = Math.sqrt(Math.abs(x * x) + Math.abs(y * y)); // 삼각함수\r\n        if (this.radius >= my_len) {\r\n            result = true;\r\n        }\r\n        var rad = Math.atan2(y, x);\r\n        rad = (rad * 180) / Math.PI; // \r\n        rad += 180;\r\n        //\r\n        //\r\n        var index = -1\r\n        var status = this.hour12.filter((arg, idx) =>{\r\n            if (rad >= arg.start && rad <= arg.end) {\r\n                index = idx\r\n                if (this.map.get(arg.index)) {\r\n                    if (! this.map.get(arg.index)) {\r\n                        console.log(index, arg)\r\n                    }\r\n                    arg.name = this.map.get(arg.index).name\r\n                }\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return {result: result, degree: rad, status: status[0], index: index};\r\n    }    \r\n\r\n    drawCircle(targets, first, last, type, color?) : void {\r\n\r\n        targets.save()\r\n        targets.beginPath()\r\n        let small = 1 //\r\n        if (! type) {\r\n            targets.moveTo(this.width / 2, this.height / 2)\r\n            small = 0.98\r\n            if (this.option.sectorShow) {\r\n                if (last == 360) \r\n                    last = 360 - this.option.sectorWidth / 6\r\n                 //\r\n                if (first == 0) \r\n                    first = this.option.sectorWidth / 10\r\n                 //\r\n            }\r\n        }\r\n        targets.arc(this.width / 2, this.height / 2, this.radius * small, (Math.PI / 180) * first, (Math.PI / 180) * last, false)\r\n        if (color) {\r\n            targets.fillStyle = color\r\n            if (this.option.sectorShow) {\r\n                targets.lineWidth = this.option.sectorWidth\r\n                targets.strokeStyle = this.option.sectorColor\r\n                targets.stroke()\r\n            }\r\n        }\r\n        if (type) {\r\n            targets.lineWidth = this.option.circleWidth\r\n            targets.strokeStyle = this.option.circleColor\r\n            targets.stroke()\r\n        } else {\r\n            targets.fill()\r\n        } \r\n        targets.closePath()\r\n        targets.restore()\r\n    }    \r\n\r\n    drawCircleForArray() {\r\n        this.event_ctx.clearRect(0, 0, this.width, this.height)\r\n        this.hour12.forEach((data)=>{\r\n            if (data.dataFilled) {\r\n                this.drawCircle(this.event_ctx, data.start, data.end, false, data.filledColor)\r\n            }\r\n        })\r\n        //\r\n        this.event_ctx.save()\r\n        this.event_ctx.beginPath()\r\n        this.event_ctx.arc(this.width / 2, this.height / 2, this.radius * option.middleCicleRate, (Math.PI / 180) * 0, (Math.PI / 180) * 360, false)\r\n        this.event_ctx.fillStyle = option.sectorColor\r\n        this.event_ctx.fill()\r\n        this.event_ctx.closePath()\r\n        this.event_ctx.restore()\r\n        if (this.option.middleFontOnOff) {\r\n            this.event_ctx.save()\r\n            this.event_ctx.beginPath()\r\n            let hourMin = this.updateclock()\r\n            var minus = this.event_ctx.measureText(hourMin).width;\r\n            this.event_ctx.fillStyle = this.option.middleFontColor\r\n            this.event_ctx.font = 'normal ' + option.middleFontSize + 'px sans-serif';\r\n            this.event_ctx.fillText(hourMin, this.width / 2 - minus / 2 - this.option.middleFontPadding, this.height / 2 + 3)\r\n            this.event_ctx.fill()\r\n            this.event_ctx.closePath()\r\n            this.event_ctx.restore()\r\n        }\r\n        if (this.option.innerTextShow) {\r\n            this.textMaker(true)\r\n        }\r\n    }\r\n\r\n    textMaker(isMakeView) {\r\n        var copyArr = Object.assign([], this.hour12) //  \r\n        var summery = []\r\n        var eq = ''\r\n        var start = -1\r\n        var colors = ''\r\n        var name_ = ''\r\n        copyArr.forEach((data, idx)=>{\r\n            if (idx == 0) { //  \r\n                eq = data.index\r\n                start = data.start\r\n                colors = data.filledColor\r\n                name_ = this.map.get(eq).name\r\n            } else if (eq != data.index) { //  \r\n                summery.push({\r\n                    start: start,\r\n                    end: data.start,\r\n                    index: eq,\r\n                    filledColor: colors,\r\n                    name: name_\r\n                })\r\n                eq = data.index\r\n                start = data.start\r\n                colors = data.filledColor\r\n                name_ = this.map.get(eq).name\r\n                if (idx == copyArr.length - 1) { //  \r\n                    summery.push({\r\n                        start: start,\r\n                        end: data.end,\r\n                        index: eq,\r\n                        filledColor: colors,\r\n                        name: name_\r\n                    })\r\n                }\r\n            } else if (idx == copyArr.length - 1) { //  \r\n                summery.push({\r\n                    start: start,\r\n                    end: data.start,\r\n                    index: eq,\r\n                    filledColor: colors,\r\n                    name: name_\r\n                })\r\n            }\r\n        })\r\n        var tst = Object.assign([], summery);\r\n        var lastCheck = summery[0]\r\n        var lastCheck2 = summery[summery.length - 1]\r\n        if (lastCheck.index === lastCheck2.index) { //  \r\n            summery[0].start = lastCheck2.start\r\n            summery.pop()\r\n        }\r\n        if (isMakeView) {\r\n            summery.forEach(  (data)=>{\r\n                if (data.index != '') {\r\n                    var half = Math.abs(data.end - data.start) / 2\r\n                    if (data.start > data.end) {\r\n                        half = (360 - data.start + data.end) / 2\r\n                    }\r\n                    var degg = data.start + half;\r\n                    var xx = Math.cos(this.degreesToRadians(degg)) * this.radius * 0.7 + this.width / 2;\r\n                    var yy = Math.sin(this.degreesToRadians(degg)) * this.radius * 0.7 + this.height / 2;\r\n                    this.event_ctx.save()\r\n                    this.event_ctx.beginPath()\r\n                    this.event_ctx.font = option.innerFontStyle;\r\n                    this.event_ctx.fillStyle = option.innerFontColor\r\n                    let minus = this.event_ctx.measureText(data.name).width;\r\n                    this.event_ctx.fillText(data.name, xx - minus - option.innerTextPadding, yy)\r\n                    this.event_ctx.restore()\r\n                }\r\n            })\r\n        }\r\n        return summery;\r\n    }    \r\n\r\n    updateclock() {\r\n        function pad(n) {\r\n            return(n < 10) ? '0' + n : n;\r\n        }\r\n        let time = new Date();\r\n        let hours = time.getHours();\r\n        let minutes = time.getMinutes();\r\n        if (hours > 12) {\r\n            hours -= 12;\r\n        } else if (hours === 0) {\r\n            hours = 12;\r\n        }\r\n        let todisplay = pad(hours) + ':' + pad(minutes);\r\n        return todisplay\r\n    }\r\n\r\n\r\n    degreesToRadians(degrees) : number{\r\n        const pi = Math.PI;\r\n        return degrees * (pi / 180);\r\n    }\r\n\r\n\r\n    printer() {\r\n        let copyArr = Object.assign([], this.hour12)\r\n        copyArr.sort((arg1, arg2)=>{\r\n            return arg1.display > arg2.display\r\n        })\r\n        copyArr.forEach( (data)=>{\r\n            let startNum : any = Number(data.display) - 1\r\n            if (startNum == 0) { startNum = 12 }\r\n            else if (startNum < 10) { startNum = '0' + startNum }\r\n            let log = `${ startNum } ~ ${ data.display } : ${ data.index }`\r\n            console.log(log)\r\n        })\r\n    }    \r\n\r\n\r\n    //export functions\r\n    clearAll  () {\r\n        console.log('clean')\r\n        this.hour12.forEach(function (arg) {\r\n            arg.name = '';\r\n            arg.dataFilled = false;\r\n            arg.filledColor = '';\r\n            arg.index = '';\r\n        });\r\n        this.drawCircleForArray()\r\n    }    \r\n\r\n    getTimePureData = function () {\r\n        return Object.assign([], this.hour12);\r\n    }   \r\n\r\n    getTimeData () {\r\n        return Object.assign([], this.hour12).sort((arg1, arg2)=>{\r\n            return arg1.display - arg2.display\r\n        }).map( (arg)=>{\r\n            arg.time = arg.display;\r\n            delete arg.display;\r\n            return this.sortObject(arg);\r\n        });\r\n    }     \r\n\r\n    getSummeryData () {\r\n        let arr = this.textMaker(false);\r\n        return this.sortObject(arr.map( (dt)=>{\r\n            if (! dt.name) {\r\n                dt.name = null\r\n                dt.index = null\r\n            }\r\n            this.hour12.forEach( (arg)=>{\r\n                if (dt.start == arg.start) {\r\n                    let tmp : any = Number(arg.display) - 1;\r\n                    tmp = tmp < 10 ? '0' + tmp : tmp + \"\";\r\n                    dt.startTime = tmp;\r\n                }\r\n                if (dt.end == arg.end) {\r\n                    dt.endTime = arg.display;\r\n                }\r\n            });\r\n            return dt;\r\n        }));\r\n    }\r\n    \r\n    exportImage = (fileName)=>{\r\n        if (! fileName) \r\n            fileName = 'screenShot.png'\r\n        \r\n        this.commonImgFun(null, fileName);\r\n    }\r\n\r\n    getImageData = (fns)=>{\r\n        this.commonImgFun(fns, null);\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\n\r\n\r\nlet option = {\r\n    beforWorking : function(){  //스케줄러를 만들기 전 행동을 합니다.\r\n        console.log('befor')\r\n    },\r\n    showPrinter: true, //디버깅용 버튼을 만듭니다.\r\n\r\n    lineColor :'#aaaaaa',  //내부 선 색깔 입니다.\r\n    lineWidth : 0.7,  //내부 선 두께 입니다.\r\n    lineShow : true,   //내부 선 표시여부 입니다.\r\n\r\n    circleColor : '#aaaaaa',   //원형 색깔 입니다.\r\n    circleWidth : 3,   //원형 선 두께 입니다.\r\n\r\n    sectorShow : false,  //부채꼴 테두리 입니다.\r\n    sectorWidth : 3,  // 부채꼴 테두리 두께 입니다.\r\n    sectorColor : 'white',  //부채꼴 테두리 색상 입니다.\r\n\r\n    timeColor : '#aaaaaa',   //외부 시간 색깔  입니다.\r\n    timeFontStyle : '18px sans-serif',  //외부 시간 글씨 타입 입니다.\r\n    timeTextPadding : 2,  //외부 시간 여백입니다.(양수면 왼쪽, 음수면 오른쪽으로 이동 합니다.)\r\n\r\n    innerTextShow : true,  //내부 글씨 표출여부 입니다.\r\n    innerFontColor : 'white', //내부 글씨 색깔 입니다.\r\n    innerTextPadding : -15, //내부 글씨 여백입니다.(양수면 왼쪽, 음수면 오른쪽으로 이동 합니다.)\r\n    innerFontStyle : '13px sans-serif',  //내부 글씨 타입 입니다.\r\n\r\n    middleCicleRate : 0.18,  //중앙 원 크기 비율입니다.\r\n    middleFontOnOff : true,  //중앙 시간을 표시할지말지 여부 입니다.\r\n    middleFontSize : 14,  //중앙 글씨 크기 입니다.\r\n    middleFontPadding : 5,  //중앙 글씨 여백 입니다. (양수면 왼쪽, 음수면 오른쪽으로 이동 합니다.)\r\n\r\n    afterWorking : function(timeData){  //스케줄러가 다 만들어지고 나서의 행동 입니다.\r\n        console.log('after',timeData)\r\n    }\r\n}    \r\nlet savedData = [\r\n\r\n]\r\n\r\n\r\nlet cvns = new CircleSchedule('myCanvas',savedData, option)    \r\nmodule.exports.getTimePureData = ()=>{\r\n    cvns.getTimePureData()\r\n};\r\nmodule.exports.getTimeData = ()=>{\r\n    cvns.getTimeData()\r\n};\r\nmodule.exports.getSummeryData = ()=>{return cvns.getSummeryData();}\r\nmodule.exports.exportImage = (arg)=>{return cvns.exportImage(arg)};\r\nmodule.exports.getImageData =(arg)=>{return  cvns.getImageData(arg);}\r\nmodule.exports.clearAll = ()=>{return cvns.clearAll();}\r\nmodule.exports.resizeOnOff = (arg)=>{\r\n    cvns.resizeOnOff = arg\r\n};"]}